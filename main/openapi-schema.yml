openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /api/order:
    get:
      operationId: listOrders
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
  /api/cart:
    get:
      operationId: listCarts
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
    post:
      operationId: CreateCart
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
    put:
      operationId: UpdateCart
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
    delete:
      operationId: DestroyCart
      parameters: []
      responses:
        '204':
          description: ''
  /api/products:
    get:
      operationId: listProducts
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
  /api/categories:
    get:
      operationId: listCategorys
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    id:
                      type: integer
                      readOnly: true
                    name:
                      type: string
                      maxLength: 40
                  required:
                  - name
          description: ''
  /api/shops:
    get:
      operationId: listShops
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    id:
                      type: integer
                      readOnly: true
                    name:
                      type: string
                      maxLength: 50
                    state:
                      type: boolean
                    url:
                      type: string
                      format: uri
                      nullable: true
                      maxLength: 200
                      pattern: "^(?:[a-z0-9\\.\\-\\+]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:25[0-5]|2[0-4]\\\
                        d|[0-1]?\\d?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|[0-1]?\\d?\\d)){3}|\\\
                        [[0-9a-f:\\.]+\\]|([a-z\xA1-\uFFFF0-9](?:[a-z\xA1-\uFFFF0-9-]{0,61}[a-z\xA1\
                        -\uFFFF0-9])?(?:\\.(?!-)[a-z\xA1-\uFFFF0-9-]{1,63}(?<!-))*\\\
                        .(?!-)(?:[a-z\xA1-\uFFFF-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\\
                        .?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\Z"
                  required:
                  - name
          description: ''
  /api/partner/state:
    get:
      operationId: listProviderStates
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
    post:
      operationId: CreateProviderState
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
  /api/partner/orders:
    get:
      operationId: listProviderOrders
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
  /api/user/contact:
    get:
      operationId: listContacts
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
    post:
      operationId: CreateContact
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
    put:
      operationId: UpdateContact
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
    delete:
      operationId: DestroyContact
      parameters: []
      responses:
        '204':
          description: ''
  /api/user/details:
    get:
      operationId: listUserDetails
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
    post:
      operationId: CreateUserDetails
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
  /api/partner/update:
    post:
      operationId: CreateProviderUpdate
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
  /api/user/login:
    post:
      operationId: CreateLoginUser
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
  /api/user/register:
    post:
      operationId: CreateRegisterUser
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
  /api/user/password_reset:
    post:
      operationId: CreateEmail
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                email:
                  type: string
                  format: email
              required:
              - email
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  email:
                    type: string
                    format: email
                required:
                - email
          description: ''
  /api/user/password_reset/confirm:
    post:
      operationId: CreatePasswordToken
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                password:
                  type: string
                token:
                  type: string
              required:
              - password
              - token
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  password:
                    type: string
                  token:
                    type: string
                required:
                - password
                - token
          description: ''
